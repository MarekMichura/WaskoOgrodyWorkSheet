# install tools for server
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS server-sdk
WORKDIR /Server/
RUN apt-get update && apt-get install -y --no-install-recommends curl && apt-get clean
RUN curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l /remote_debugger
RUN dotnet tool install --global dotnet-ef
COPY ["./Server.csproj", "./"]
RUN dotnet restore "Server.csproj"
COPY [".", "."]
RUN chmod +x taskCreateDb.sh && chmod +x wait-for-it.sh

FROM server-sdk AS server-build
WORKDIR /Server/
RUN dotnet build "./Server.csproj" -c debug -o ./output/ /p:UseAppHost=false
ENTRYPOINT [ "dotnet", "./output/Server.dll" ]

FROM server-build AS server-development
EXPOSE 8080
EXPOSE 8081
WORKDIR /Server/
ENTRYPOINT [ "dotnet", "./output/Server.dll" ]

FROM server-build AS server-update-db
WORKDIR /Server/
ENTRYPOINT [ "./taskCreateDb.sh" ]

FROM server-sdk AS server-publish
WORKDIR /Server/
RUN dotnet publish "./Server.csproj" -c release -o /Server/publish /p:UseAppHost=false

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS server-release
USER app
WORKDIR /Server
COPY --from=server-publish /Server/publish/ .
COPY --from=html-release /html/build ./wwwroot 
ENTRYPOINT ["dotnet", "Server.dll"]