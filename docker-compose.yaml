networks:
  app-network:
    driver: bridge

services:
  server-development:
    build:
      context: ./Server
      dockerfile: dockerfile
      target: server-development
      args:
        - BUILD_CONFIGURATION=debug
        - ASPNETCORE_ENVIRONMENT=Development
    container_name: server-development
    image: server-development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_PASSWORD="${DB_PASSWORD:-zaq1@WSX}"
    depends_on:
      - db
      - initialize-db-development
      - html-development
    ports:
      - "80:8080"
      - "443:8081"
    networks:
      - app-network
    volumes:
      - ./DB/images:/Server/wwwroot/images/

  server-release:
    build:
      context: ./Server
      dockerfile: dockerfile
      target: server-release
      args:
        - BUILD_CONFIGURATION=release
        - ASPNETCORE_ENVIRONMENT=release
    container_name: server-release
    image: server-release
    environment:
      - ASPNETCORE_ENVIRONMENT=release
      - DB_PASSWORD="${DB_PASSWORD:-zaq1@WSX}"
    depends_on:
      - db
      - html-release
      - initialize-db-release
    ports:
      - "80:8080"
      - "443:8081"
    networks:
      - app-network
    volumes:
      - ./DB/images:/Server/wwwroot/images/

  html-development:
    build:
      context: ./HTML
      dockerfile: dockerfile
      target: html-development
    container_name: html-development
    image: html-development
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./HTML/:/html/

  html-release:
    build:
      context: ./HTML
      dockerfile: dockerfile
      target: html-release
    container_name: html-release
    image: html-release

  db:
    build:
      context: ./DB
      dockerfile: dockerfile
      target: db-base
    container_name: db
    image: db
    environment:
      ACCEPT_EULA: "Y"
      MYSQL_USER: "10001:10001"
      MYSQL_PASS: "${DB_PASSWORD:-zaq1@WSX}"
      SA_PASSWORD: "${DB_PASSWORD:-zaq1@WSX}"
    user: "10001:10001"
    ports:
      - "1433:1433"
    networks:
      - app-network
    volumes:
      - ./DB/log/:/var/opt/mssql/log
      - ./DB/data/:/var/opt/mssql/data
      - ./DB/secrets/:/var/opt/mssql/secrets

  initialize-db-development:
    build:
      context: ./Server
      dockerfile: dockerfile
      target: server-update-db
      args:
        - BUILD_CONFIGURATION=debug
        - ASPNETCORE_ENVIRONMENT=Development
    container_name: initialize-db-debug
    image: initialize-db-debug
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_PASSWORD="${DB_PASSWORD:-zaq1@WSX}"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./DB/Migrations/:/Server/Migrations/

  initialize-db-release:
    build:
      context: ./Server
      dockerfile: dockerfile
      target: server-update-db
      args:
        - BUILD_CONFIGURATION=debug
        - ASPNETCORE_ENVIRONMENT=Development
    container_name: initialize-db-release
    image: initialize-db-release
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_PASSWORD="${DB_PASSWORD:-zaq1@WSX}"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./DB/Migrations/:/Server/Migrations/
