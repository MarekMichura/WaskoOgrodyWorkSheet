services:
  html:
    build:
      context: ./HTML
      dockerfile: Dockerfile
      target: ${HTML_TARGET:-html-development}
    container_name: html
    image: html
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./HTML/src/:/html/src/
      - ./HTML/public/:/html/public/

  server:
    build:
      context: ./Server
      dockerfile: Dockerfile
      target: ${SERVER_TARGET:-server-development}
      args:
        - BUILD_CONFIGURATION=${BUILD_CONFIGURATION:-debug}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
    container_name: server
    image: server
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - DB_PASSWORD="${DB_PASSWORD:-zaq1@WSX}"
    ports:
      - "80:8080"
      - "443:8081"
    depends_on:
      - html
      - db
    networks:
      - app-network
    volumes:
      - ./Server/src/Migrations/:/Server/Migrations

  db:
    build:
      context: ./DB
      dockerfile: Dockerfile
      target: db-base
    container_name: db
    image: db
    environment:
      ACCEPT_EULA: "Y"
      MYSQL_USER: "10001:10001"
      MYSQL_PASS: "${DB_PASSWORD:-zaq1@WSX}"
      SA_PASSWORD: "${DB_PASSWORD:-zaq1@WSX}"
    user: "10001:10001"
    ports:
      - "1433:1433"
    networks:
      - app-network
    volumes:
      - ./DB/log/:/var/opt/mssql/log
      - ./DB/data/:/var/opt/mssql/data
      - ./DB/secrets/:/var/opt/mssql/secrets

networks:
  app-network:
    driver: bridge
